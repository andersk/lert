development files for lert program

lert is supposed to notify a user during login via zephyr or cat if the
user belongs to a group (originally, users whose accounts are
scheduled for deactivation).

client/server needed (rather than simple world readable file) to
protect privacy of those scheduled for deactivation (important since
such accounts are often targets for crackers).

client program uses kerberos to ask server if we need to notify.
this assures server that client is who it says it is.

server looks in database and returns string of characters, one
character for each group.

client then sends one message (zephyr or cat) for each character.
files with messages are kept in well-known location, since I don't
think either the text of the messages or the existence of the groups
needs to be a secret.

administrators of the lert system have lertload to add users with a
letter group and lertdump to look at the db, lertstop to remove a
category, and lertused to remove a user.

idiot# files are test files I used to learn something about kerberos,
the zwrite code from gms, and the improved zwrite code I'm using for
this.

idiot4 is a stand-alone version of the client/server without kerberos or
networking.  It may turn out to be handy for showing the administrators
just what lert will do...since it allows you to cheat and tell it which
user name to use.

krbreq.c and ticode.c are example code -- nonworking.

lert.c is the client.
  usage: lert [-z]
lertsrv.c is the server.
  usage: lert
lertload.c is the db load.
  usage:  lertload type < namefile
lertdump.c is the db dump.
  usage:  lertdump
lertstop.c removes a category
  usage:  lertstop type
lertused.c removes a user
  usage:  lertstop name
lertsaid.c dumps the log db
  usage: lertdump

note: code here is neither well-commented nor particularly
well-designed.  I think it all works, and given a bit more time,
should comment it and package it better, but...

futures:
  lertsrv actually sees every login in the place.  it might be
interesting/useful sometimes to be able to track those (if there isn't
anything else doing it).  you could add this pretty easily...
  lertsrv also could count accesses, msgs, etc.  stats are so much fun.



